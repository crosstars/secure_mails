# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'editor.ui'
#
# Created by: PyQt5 UI code generator 5.15.6
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.



import time
from PyQt5 import QtCore, QtGui, QtWidgets
from numpy import equal
from Messeges.window import CustomDialog
import Transmission.retreve as ret
import Transmission.send as se 
from Nosdb.insert import users
from threading import Thread



class Ui_editor_window(object):
    def setupUi(self, editor_window ,login_info=None,ref=None):
        self.wt = editor_window
        self.next=-1
        self.login_info=login_info
        self.ref = ref
        editor_window.setObjectName("editor_window")
        editor_window.resize(761, 630)
        self.user_fulltabs = QtWidgets.QWidget(editor_window)
        self.user_fulltabs.setObjectName("user_fulltabs")
        self.gridLayout_4 = QtWidgets.QGridLayout(self.user_fulltabs)
        self.gridLayout_4.setSizeConstraint(QtWidgets.QLayout.SetDefaultConstraint)
        self.gridLayout_4.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_4.setHorizontalSpacing(0)
        self.gridLayout_4.setObjectName("gridLayout_4")

        self.tabs = QtWidgets.QTabWidget(self.user_fulltabs)
        self.tabs.setUsesScrollButtons(True)
        self.tabs.setTabBarAutoHide(True)
        self.tabs.setObjectName("tabs")

        self.Accounts = QtWidgets.QWidget()
        self.Accounts.setObjectName("Accounts")
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.Accounts.sizePolicy().hasHeightForWidth())
        self.Accounts.setSizePolicy(sizePolicy)
        self.Accounts.setObjectName("tab")
        self.somethings = QtWidgets.QLabel(self.Accounts)
        self.somethings.setGeometry(QtCore.QRect(290, 80, 180, 180))
        font = QtGui.QFont()
        font.setPointSize(20)
        self.somethings.setFont(font)
        self.somethings.setStyleSheet("border: 3px solid white;\n"
"border-radius: 90px;\n"
"background :qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0, stop:0 rgba(50, 0, 0, 255), stop:1 rgba( 216, 113, 28, 255));\n"
"")
        self.somethings.setAlignment(QtCore.Qt.AlignCenter)
        self.somethings.setObjectName("label")
        self.somethings_2 = QtWidgets.QLabel(self.Accounts)
        self.somethings_2.setGeometry(QtCore.QRect(190, 10, 371, 51))
        font = QtGui.QFont()
        font.setPointSize(30)
        self.somethings_2.setFont(font)
        self.somethings_2.setAlignment(QtCore.Qt.AlignCenter)
        self.somethings_2.setWordWrap(True)
        self.somethings_2.setObjectName("label_2")

        self.logout = QtWidgets.QPushButton(self.Accounts)
        self.logout.setGeometry(QtCore.QRect(610 , 20, 70, 30))

        self.groupBox = QtWidgets.QGroupBox(self.Accounts)
        self.groupBox.setGeometry(QtCore.QRect(230, 270, 341, 251))
        self.groupBox.setObjectName("groupBox")
        self.gridLayout = QtWidgets.QGridLayout(self.groupBox)
        self.gridLayout.setObjectName("gridLayout")
        self.Username = QtWidgets.QLabel(self.groupBox)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.Username.sizePolicy().hasHeightForWidth())
        self.Username.setSizePolicy(sizePolicy)
        self.Username.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.Username.setObjectName("Username")
        self.gridLayout.addWidget(self.Username, 0, 0, 1, 1)
        self.mail_recived = QtWidgets.QLabel(self.groupBox)
        self.mail_recived.setObjectName("mail_recived")
        self.gridLayout.addWidget(self.mail_recived, 5, 0, 1, 1)
        self.data_mail_sent = QtWidgets.QLabel(self.groupBox)
        self.data_mail_sent.setObjectName("data_mail_sent")
        self.gridLayout.addWidget(self.data_mail_sent, 4, 2, 1, 1)
        self.Email = QtWidgets.QLabel(self.groupBox)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.Email.sizePolicy().hasHeightForWidth())
        self.Email.setSizePolicy(sizePolicy)
        self.Email.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.Email.setObjectName("Email")
        self.gridLayout.addWidget(self.Email, 1, 0, 1, 1)
        self.data_uname = QtWidgets.QLabel(self.groupBox)
        font = QtGui.QFont()
        font.setPointSize(13)
        self.data_uname.setFont(font)
        self.data_uname.setFrameShadow(QtWidgets.QFrame.Plain)
        self.data_uname.setObjectName("data_uname")
        self.gridLayout.addWidget(self.data_uname, 0, 2, 1, 1)
        self.data_created_at = QtWidgets.QLabel(self.groupBox)
        font = QtGui.QFont()
        font.setPointSize(13)
        self.data_created_at.setFont(font)
        self.data_created_at.setFrameShadow(QtWidgets.QFrame.Plain)
        self.data_created_at.setObjectName("data_created_at")
        self.gridLayout.addWidget(self.data_created_at, 3, 2, 1, 1)
        self.Created_at = QtWidgets.QLabel(self.groupBox)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.Created_at.sizePolicy().hasHeightForWidth())
        self.Created_at.setSizePolicy(sizePolicy)
        self.Created_at.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.Created_at.setObjectName("Created_at")
        self.gridLayout.addWidget(self.Created_at, 3, 0, 1, 1)
        self.key = QtWidgets.QLabel(self.groupBox)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.key.sizePolicy().hasHeightForWidth())
        self.key.setSizePolicy(sizePolicy)
        self.key.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.key.setObjectName("key")
        self.gridLayout.addWidget(self.key, 2, 0, 1, 1)
        self.data_key = QtWidgets.QLabel(self.groupBox)
        font = QtGui.QFont()
        font.setPointSize(13)
        self.data_key.setFont(font)
        self.data_key.setFrameShadow(QtWidgets.QFrame.Plain)
        self.data_key.setObjectName("data_key")
        self.gridLayout.addWidget(self.data_key, 2, 2, 1, 1)
        self.mail_sent = QtWidgets.QLabel(self.groupBox)
        self.mail_sent.setObjectName("mail_sent")
        self.gridLayout.addWidget(self.mail_sent, 4, 0, 1, 1)
        self.data_mail_recived = QtWidgets.QLabel(self.groupBox)
        self.data_mail_recived.setObjectName("data_mail_recived")
        self.gridLayout.addWidget(self.data_mail_recived, 5, 2, 1, 1)
        self.data_email = QtWidgets.QLabel(self.groupBox)
        font = QtGui.QFont()
        font.setPointSize(13)
        self.data_email.setFont(font)
        self.data_email.setFrameShadow(QtWidgets.QFrame.Plain)
        self.data_email.setObjectName("data_email")
        self.gridLayout.addWidget(self.data_email, 1, 2, 1, 1)
        self.tabs.addTab(self.Accounts, "")
        
        self.Inbox = QtWidgets.QWidget()
        self.Inbox.setObjectName("Inbox")
       
        
        self.gridLayout_3 = QtWidgets.QGridLayout(self.Inbox)
        self.gridLayout_3.setContentsMargins(0, 0, -1, 0)
        self.gridLayout_3.setHorizontalSpacing(0)
        self.gridLayout_3.setObjectName("gridLayout_3")
        
        self.Inbox_grp = QtWidgets.QGroupBox(self.Inbox)
        self.Inbox_grp.setTitle("")
        self.Inbox_grp.setObjectName("Inbox_grp")
        
        self.gridLayout_3.addWidget(self.Inbox_grp, 0, 0, 1, 1)
        self.Inbox_grp.setStyleSheet("background-color: rgb(28, 113, 216);\n"
"background-color: qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0, stop:0 rgba(0, 0, 50, 255), stop:1 rgba(28, 113, 216, 255));\n"
"")
        self.inlist = QtWidgets.QListWidget(self.Inbox_grp)
        self.inlist.setEnabled(True)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.inlist.sizePolicy().hasHeightForWidth())
        self.inlist.setSizePolicy(sizePolicy)
        self.inlist.viewport().setProperty("cursor", QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.inlist.setMovement(QtWidgets.QListView.Free)
        #self.inlist.setFlow(QtWidgets.QListView.LeftToRight)
        self.inlist.setResizeMode(QtWidgets.QListView.Fixed)
        self.inlist.setUniformItemSizes(True)
        self.inlist.setWordWrap(True)
        self.inlist.setSelectionRectVisible(False)
        self.inlist.setObjectName("inlist")
        self.inlist.setStyleSheet("QListWidget"
                                  "{"
                                  "background :qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0, stop:0 rgba(0, 0, 50, 255), stop:1 rgba(28, 113, 216, 255));"
                                  "}"
                                  "QListView::item"
                                  "{"
                                  "color:#ffffff;"
                                  "border : 2px solid black;"
                                  "background : rgba(0, 0, 50, 150);"
                                  "}"                                  
                                  "QListView::item:selected"
                                  "{"
                                  "border : 2px solid black;"
                                  "background : green;"
                                  "}")

        self.gridLayout_3.addWidget(self.inlist, 0, 0, 1, 1)
        self.inlist.setSpacing(10)
        self.inlist.itemDoubleClicked.connect(self.onclickedin)
        
        self.tabs.addTab(self.Inbox, "")
        
        self.Sent = QtWidgets.QWidget()
        self.Sent.setObjectName("Sent")
        
        self.gridLayout = QtWidgets.QGridLayout(self.Sent)
        self.gridLayout.setContentsMargins(0, 0, -1, 0)
        self.gridLayout.setHorizontalSpacing(0)
        self.gridLayout.setObjectName("gridLayout")
        
        self.Sent_grp = QtWidgets.QGroupBox(self.Sent)
        self.Sent_grp.setTitle("")
        self.Sent_grp.setObjectName("Sent_grp")
        self.gridLayout.addWidget(self.Sent_grp, 0, 0, 1, 1)
        self.Sent_grp.setStyleSheet("background-color: rgb(28, 113, 216);\n"
"background-color: qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0, stop:0 rgba(0, 0, 50, 255), stop:1 rgba(28, 113, 216, 255));\n"
"")
        self.outlist = QtWidgets.QListWidget(self.Inbox_grp)
        self.outlist.setEnabled(True)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.outlist.sizePolicy().hasHeightForWidth())
        self.outlist.setSizePolicy(sizePolicy)
        self.outlist.viewport().setProperty("cursor", QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.outlist.setMovement(QtWidgets.QListView.Free)
        #self.outlist.setFlow(QtWidgets.QListView.UptoDown)
        self.outlist.setResizeMode(QtWidgets.QListView.Fixed)
        self.outlist.setUniformItemSizes(True)
        self.outlist.setWordWrap(True)
        self.outlist.setSelectionRectVisible(False)
        self.outlist.setSpacing(10)
        self.outlist.setObjectName("outlist")
        self.outlist.setStyleSheet("QListWidget"
                                  "{"
                                  "background :qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0, stop:0 rgba(0, 0, 50, 255), stop:1 rgba(28, 113, 216, 255));"
                                  "}"
                                  "QListView::item"
                                  "{"
                                  "color:#ffffff;"
                                  "border : 2px solid black;"
                                  "background : rgba(0, 0, 50, 150);"
                                  "}"                                  
                                  "QListView::item:selected"
                                  "{"
                                  "border : 2px solid black;"
                                  "background : green;"
                                  "}")
        self.outlist.itemDoubleClicked.connect(self.onclickedout)
        self.gridLayout.addWidget(self.outlist, 0, 0, 1, 1)

        self.tabs.addTab(self.Sent, "")
        self.read("in")
        self.read("out")

        
        
        
        self.Editor = QtWidgets.QWidget()
        self.Editor.setObjectName("Editor")
        self.gridLayout_2 = QtWidgets.QGridLayout(self.Editor)
        self.gridLayout_2.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_2.setSpacing(0)
        self.gridLayout_2.setObjectName("gridLayout_2")
        self.editor_grp = QtWidgets.QGroupBox(self.Editor)
        self.editor_grp.setStyleSheet("background-color: rgb(28, 113, 216);\n"
"background-color: qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0, stop:0 rgba(0, 0, 50, 255), stop:1 rgba(28, 113, 216, 255));\n"
"")
        self.editor_grp.setTitle("")
        self.editor_grp.setObjectName("editor_grp")
        
        self.mail_sub = QtWidgets.QPlainTextEdit(self.editor_grp)
        self.mail_sub.setGeometry(QtCore.QRect(60, 170, 671, 91))
        self.mail_sub.setStyleSheet("background-color: rgba(0, 0, 0, 125);")
        self.mail_sub.setObjectName("mail_sub")
        self.mail_contents = QtWidgets.QTextEdit(self.editor_grp)
        self.mail_contents.setGeometry(QtCore.QRect(60, 290, 671, 201))
        self.mail_contents.setStyleSheet("background-color: rgba(0, 0, 0, 125);")
        self.mail_contents.setObjectName("mail_contents")
        self.mail_contents.textChanged.connect(self.enable_btn)
        self.label_9 = QtWidgets.QLabel(self.editor_grp)
        self.label_9.setGeometry(QtCore.QRect(130, 100, 41, 21))
        font = QtGui.QFont()
        font.setPointSize(18)
        self.label_9.setFont(font)
        self.label_9.setStyleSheet("background-color: rgba(0, 0, 0, 0);")
        self.label_9.setObjectName("label_9")
        self.label_10 = QtWidgets.QLabel(self.editor_grp)
        self.label_10.setGeometry(QtCore.QRect(70, 140, 657, 18))
        self.label_10.setStyleSheet("background-color: rgba(0, 0, 0, 0);")
        self.label_10.setObjectName("label_10")
        self.label_11 = QtWidgets.QLabel(self.editor_grp)
        self.label_11.setGeometry(QtCore.QRect(70, 270, 657, 18))
        self.label_11.setStyleSheet("background-color: rgba(0, 0, 0, 0);")
        self.label_11.setObjectName("label_11")
        self.reciver_email = QtWidgets.QLineEdit(self.editor_grp)
        self.reciver_email.setGeometry(QtCore.QRect(180, 90, 471, 36))
        self.reciver_email.setStyleSheet("background-color: rgba(0, 0, 0, 125);")
        self.reciver_email.textChanged.connect(self.enable_btn)
        self.reciver_email.setObjectName("reciver_email")
        

        self.send_mail = QtWidgets.QPushButton(self.editor_grp, enabled=False)
        self.send_mail.setGeometry(QtCore.QRect(340, 510, 101, 41))
        self.send_mail.setStyleSheet("color: rgb(255, 255, 255);\n"
"selection-background-color: rgb(26, 95, 180);\n"
#"background-color: rgb(53, 132, 228);\n"
"background-color: rgba(53, 132, 228, 125);\n"
"selection-background-color: rgb(26, 95, 180);")
        self.send_mail.setObjectName("send_mail")
        self.send_mail.clicked.connect(self.send_mail_action)
        
        self.label = QtWidgets.QLabel(self.editor_grp)
        self.label.setGeometry(QtCore.QRect(320, 20, 131, 31))
        font = QtGui.QFont()
        font.setPointSize(23)
        self.label.setFont(font)
        self.label.setStyleSheet("background-color: rgba(0, 0, 0, 0);")
        self.label.setObjectName("label")
        self.gridLayout_2.addWidget(self.editor_grp, 0, 0, 1, 1)
        self.tabs.addTab(self.Editor, "")
        self.gridLayout_4.addWidget(self.tabs, 0, 0, 1, 1)
        editor_window.setCentralWidget(self.user_fulltabs)
        t = Thread(target = self.reader, args =("Recived", ), daemon = True)
        t.start()
        self.read("Sent")



        self.retranslateUi(editor_window,login_info)
        self.tabs.setCurrentIndex(0)
        QtCore.QMetaObject.connectSlotsByName(editor_window)

    def retranslateUi(self, editor_window,login_info):
        _translate = QtCore.QCoreApplication.translate
        editor_window.setWindowTitle(_translate("editor_window", "MainWindow"))
        self.tabs.setTabText(self.tabs.indexOf(self.Inbox), _translate("editor_window", "Inbox"))
        self.tabs.setTabText(self.tabs.indexOf(self.Sent), _translate("editor_window", "Outbox"))
        self.tabs.setTabText(self.tabs.indexOf(self.Editor), _translate("editor_window", "Editor"))
        self.tabs.setTabText(self.tabs.indexOf(self.Accounts), _translate("account_window", "Account"))
        self.label_9.setText(_translate("editor_window", "To"))
        self.label_10.setText(_translate("editor_window", "Subject:"))
        self.label_11.setText(_translate("editor_window", "Content:"))
        self.send_mail.setText(_translate("editor_window", "Send"))
        self.label.setText(_translate("editor_window", "EDITOR"))
        self.somethings.setText(_translate("editor_window", login_info["name"]))
        self.somethings_2.setText(_translate("editor_window", "Nice to see you "))
        self.groupBox.setTitle(_translate("editor_window", "Account info :"))
        self.Username.setText(_translate("editor_window", "Username    :    "))
        self.mail_recived.setText(_translate("editor_window", "Mail recived    :    "))
        self.data_mail_sent.setText(_translate("editor_window", str(self.outlist.count())))
        self.Email.setText(_translate("editor_window", "Email    :    "))
        self.data_uname.setText(_translate("editor_window",  login_info["name"]))
        self.data_created_at.setText(_translate("editor_window", login_info["created"]))
        self.Created_at.setText(_translate("editor_window", "Created at    :    "))
        self.key.setText(_translate("editor_window", "Key    :    "))
        self.data_key.setText(_translate("editor_window",  login_info["gen_pubkey"]))
        self.mail_sent.setText(_translate("editor_window", "Mail sent    :    "))
        self.data_mail_recived.setText(_translate("editor_window", str(self.inlist.count())))
        self.data_email.setText(_translate("editor_window",  login_info["email"]))
        self.logout.setText("Log out")
        self.logout.clicked.connect(self.logout_fun)

        self.inlist.setSortingEnabled(True)
        self.outlist.setSortingEnabled(True)

        self.inlist.setSpacing(12)
        self.outlist.setSpacing(12)

    def logout_fun(self) :
        self.next = 1
        self.login_info = None
        self.clicked = 1
        QtWidgets.qApp.quit()

    def enable_btn(self): 
        self.send_mail.setEnabled(self.reciver_email.text() != 0 and self.mail_contents.toPlainText() != "" )    

    def send_mail_action(self):
        if self.mail_sub.toPlainText() == "" :
            self.sub = "--No Subject--"
        else :
            self.sub = self.mail_sub.toPlainText()
        
        u_ref = self.ref.child("User")

        exists = u_ref.child(self.login_info["name"]).get()
        
        if exists :
            ts,_,_ = se.send(self.mail_contents.toPlainText(),self.reciver_email.text().lower().strip(),self.sub,self.login_info,self.ref)
            self.outlist.addItem("\tTime: "+ts+ "\n\tTo: " + self.reciver_email.text() +"\n\tSubject: "+self.sub)
            self.data_mail_sent.setText(str(self.outlist.count()))
            self.reciver_email.setText("")
            
            self.mail_contents.setPlainText("")
            self.mail_sub.setPlainText("")
            self.outlist.sortItems(QtCore.Qt.DescendingOrder)
            
        else:          
            #error
            pass

    def read(self,state):
        if state == "Recived":
            target = self.inlist
            info = self.ref.child("Recived").child(self.login_info["name"]).get()
            target.clear()
            
            for i,k in info.items() :
                if k == "begening" :
                    continue
                print(k , type(k))
                string = "\tTime: "+i+ "\n\tFrom: " + k["sender"] +"\n\tSubject: "+k["subject"]
                item1 = QtWidgets.QListWidgetItem(string)
                    #  # #target.clear()
                item1.setBackground( QtGui.QColor('#fdc086') )
                target.addItem(item1)
                
                
            self.data_mail_recived.setText(str(self.inlist.count()))
            
        else :
            target = self.outlist
            info = self.ref.child("Sent").child(self.login_info["name"]).get()
            target.clear()
            for i,k in info.items() :
                try :
                    #target.clear()
                    target.addItem("\tTime: "+i+ "\n\tTo: " + k["reciver"] +"\n\tSubject: "+k["subject"])
                except :
                    continue

        target.sortItems(QtCore.Qt.DescendingOrder)
        

    def reader(self,state):
        
        i=0
        while i < 10000:
            self.read(state)
            time.sleep(5)
            i+=1
        print("session expired")
        self.next=3
        QtWidgets.qApp.quit()
    
    def onclickedin(self ,item):
        info = item.text().split("\t")
        ts = info[1][6:-1]
        from_= info[2][6:-1]
        to = self.login_info["name"]
        mail = ret.recive(self.ref,to,ts,0)
        dlg = CustomDialog(ts,to + "(YOU)",from_,mail["subject"],mail["contents"],caller=self)#self.wt)
        if dlg.exec():
            print("Success!")
        else:
            print("Cancel!")

        pass
    
    def onclickedout(self ,item):
        info = item.text().split("\t")
        ts = info[1][6:-1]
        to = info[2][4:-1]
        from_= self.login_info["name"]

        mail = ret.recive(self.ref,from_,ts,1)
        print(mail)
        dlg = CustomDialog(ts,to,from_ + "(YOU)",mail["subject"],mail["contents"],caller=self)#self.wt)
        if dlg.exec():
            print("Success!")
        else:
            print("Cancel!")

        pass



