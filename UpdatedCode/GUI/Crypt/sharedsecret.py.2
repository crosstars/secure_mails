# from tinyec import registry 
# import secrets
# import pickle

# def compress(pubKey):
#     return hex(pubKey.x) + hex(pubKey.y % 2)[2:]

# curve = registry.get_curve('brainpoolP256r1')
 
# #retrieve privatekey from userprivatekey.txt as senderprivatekey/recieverprivatekey and then set senderprivatekey/recieverprivatekey as pickle.loads(senderprivatekey/recieverprivatekey)
# #retrieve publickey from database as reciverpublickey/senderpublickey and then set reciverpublickey/senderpublickey as pickle.loads(reciverpublickey/senderpublickey)
# def secret():
#     enckey/deckey = reciverpublickey/senderpublickey * senderprivatekey/recieverprivatekey 
#     enckey/deckey = compress(enckey/deckey)
#     enckey/deckey = int(enckey/deckey,16)
#     enckey/deckey = bin(enckey/deckey)[:256]
#     enckey/deckey = int(enckey/deckey, 2).to_bytes((len(enckey/deckey) + 7) // 8, byteorder='big')
#     return enckey/deckey

